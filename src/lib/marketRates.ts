// Minimal market rates helper â€“ temporary static dataset
// In future this will query Supabase or external APIs.

// note: we avoid using 'fs' to stay compatible with edge runtime

export interface MarketRate {
  modal: string;              // e.g. 'sea_fcl', 'sea_lcl', 'road_ftl', 'road_ltl', 'air', 'rail'
  origin: string;             // ISO-2 uppercase or 'ANY'
  destination: string;        // ISO-2 uppercase or 'ANY'
  unit: string;               // description (container_20, kg, wm, etc.)
  valueUSD: number;           // price reference
  source: string;             // data source (FBX, SeaRates, ANTT...)
  dt: string;                 // ISO date string (yyyy-mm-dd)
}

// Static sample data. Add more lanes as needed.
const DATA: MarketRate[] = [
  { modal: 'sea_fcl', origin: 'AR', destination: 'BR', unit: 'container_20', valueUSD: 1800, source: 'SeaRates', dt: '2025-06-25' },
  { modal: 'sea_fcl', origin: 'AR', destination: 'BR', unit: 'container_40', valueUSD: 2500, source: 'SeaRates', dt: '2025-06-25' },
  { modal: 'sea_lcl', origin: 'AR', destination: 'BR', unit: 'wm', valueUSD: 45, source: 'SeaRates', dt: '2025-06-25' },
  { modal: 'air', origin: 'AR', destination: 'BR', unit: 'kg', valueUSD: 6.5, source: 'TAC Freight', dt: '2025-06-25' },
  { modal: 'road_ftl', origin: 'AR', destination: 'BR', unit: 'truck', valueUSD: 3200, source: 'ANTT+Diesel', dt: '2025-06-25' },
  { modal: 'road_ltl', origin: 'AR', destination: 'BR', unit: 'kg', valueUSD: 1.4, source: 'ANTT+Diesel', dt: '2025-06-25' },
  { modal: 'rail', origin: 'AR', destination: 'BR', unit: 'kg', valueUSD: 0.9, source: 'Rumo Tariff', dt: '2025-06-25' },
  // Fallback world averages
  { modal: 'sea_fcl', origin: 'ANY', destination: 'ANY', unit: 'container_20', valueUSD: 1900, source: 'FBX Global', dt: '2025-06-24' },
  { modal: 'sea_lcl', origin: 'ANY', destination: 'ANY', unit: 'wm', valueUSD: 50, source: 'FBX Global', dt: '2025-06-24' },
  { modal: 'air', origin: 'ANY', destination: 'ANY', unit: 'kg', valueUSD: 7, source: 'TAC Global', dt: '2025-06-24' },
];

// Try to augment DATA with JSON file generated by scraper (bundled at build time)
try {
  // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports
  const extra: MarketRate[] = require('../../data/market_rates.json');
  if (extra && Array.isArray(extra)) DATA.push(...extra);
} catch {
  // file may not exist on first build; ignore
}

export function getMarketRate(origin: string, destination: string, modal: string) {
  const o = origin.toUpperCase();
  const d = destination.toUpperCase();
  // exact match
  let rate = DATA.find(r => r.origin === o && r.destination === d && r.modal === modal);
  if(rate) return rate;
  // reverse lane
  rate = DATA.find(r => r.origin === d && r.destination === o && r.modal === modal);
  if(rate) return rate;
  // origin wildcard
  rate = DATA.find(r => r.origin === 'ANY' && r.destination === d && r.modal === modal);
  if(rate) return rate;
  // destination wildcard
  rate = DATA.find(r => r.origin === o && r.destination === 'ANY' && r.modal === modal);
  if(rate) return rate;
  // global fallback
  rate = DATA.find(r => r.origin === 'ANY' && r.destination === 'ANY' && r.modal === modal);
  return rate;
} 