// Sistema de Transpar√™ncia de Pre√ßos - Compliance Google Ads 2025
// Implementa√ß√£o da nova pol√≠tica de deturpa√ß√£o de pre√ßos

export const transparencyCompliance = {
  // üìã POL√çTICAS DE TRANSPAR√äNCIA OBRIGAT√ìRIAS
  pricingTransparency: {
    // Modelos de pagamento claros
    paymentModels: {
      "consultoria-horaria": {
        model: "Por hora de consultoria",
        basePrice: "R$ 300/hora",
        totalCost: "Custo total = horas √ó R$ 300",
        additionalFees: "Sem taxas adicionais",
        disclosure: "Pre√ßo final calculado ap√≥s an√°lise inicial gratuita"
      },
      
      "projeto-completo": {
        model: "Projeto completo",
        basePrice: "A partir de R$ 5.000",
        totalCost: "Valor fixo para escopo definido",
        additionalFees: "Poss√≠veis custos extras: documenta√ß√£o, deslocamento",
        disclosure: "Or√ßamento detalhado fornecido ap√≥s briefing gratuito"
      },
      
      "suporte-mensal": {
        model: "Suporte mensal",
        basePrice: "R$ 2.500/m√™s",
        totalCost: "Valor mensal fixo",
        additionalFees: "Sem taxas ocultas",
        disclosure: "Cancelamento com 30 dias de anteced√™ncia"
      }
    },

    // Informa√ß√µes obrigat√≥rias de transpar√™ncia
    mandatoryDisclosures: {
      "teste-gratuito": {
        duration: "30 dias",
        autoRenewal: "N√£o renova√ß√£o autom√°tica",
        cancellation: "Cancelamento sem custos",
        disclosure: "Teste gratuito por 30 dias, sem renova√ß√£o autom√°tica. Cancele a qualquer momento sem custos."
      },
      
      "analise-gratuita": {
        scope: "An√°lise inicial completa",
        duration: "At√© 2 horas",
        obligation: "Sem obriga√ß√£o de contrata√ß√£o",
        disclosure: "An√°lise gratuita de at√© 2 horas, sem obriga√ß√£o de contrata√ß√£o posterior."
      },
      
      "consultoria-inicial": {
        scope: "Primeira consultoria",
        duration: "1 hora",
        cost: "Gratuita",
        disclosure: "Primeira consultoria de 1 hora totalmente gratuita para avalia√ß√£o de necessidades."
      }
    }
  },

  // üö´ PR√ÅTICAS PROIBIDAS (evitar suspens√£o)
  prohibitedPractices: {
    "bait-and-switch": {
      description: "Anunciar pre√ßo baixo para atrair e depois oferecer produto/servi√ßo diferente",
      ourCompliance: "Sempre anunciamos pre√ßos reais e servi√ßos exatos",
      monitoring: "Auditoria mensal de an√∫ncios e landing pages"
    },
    
    "price-exploitation": {
      description: "Aproveitar vulnerabilidade para cobrar pre√ßos abusivos",
      ourCompliance: "Pre√ßos justos baseados em valor real entregue",
      monitoring: "Compara√ß√£o trimestral com mercado"
    },
    
    "hidden-fees": {
      description: "Ocultar taxas ou custos adicionais",
      ourCompliance: "Todos os custos s√£o declarados antecipadamente",
      monitoring: "Checklist de transpar√™ncia em cada proposta"
    },
    
    "false-free-trials": {
      description: "Promover teste gratuito sem clareza sobre cobran√ßa",
      ourCompliance: "Testes gratuitos claramente definidos e sem cobran√ßa autom√°tica",
      monitoring: "Revis√£o semanal de comunica√ß√µes sobre testes"
    }
  },

  // üìä SISTEMA DE MONITORAMENTO E COMPLIANCE
  complianceMonitoring: {
    // Checklist de transpar√™ncia
    transparencyChecklist: {
      "preco-visivel": "Pre√ßo principal claramente vis√≠vel",
      "custos-totais": "Custo total declarado",
      "taxas-adicionais": "Taxas adicionais listadas",
      "condicoes-cancelamento": "Condi√ß√µes de cancelamento claras",
      "renovacao-automatica": "Renova√ß√£o autom√°tica claramente indicada",
      "teste-gratuito": "Condi√ß√µes de teste gratuito expl√≠citas"
    },

    // Alertas de compliance
    complianceAlerts: {
      "preco-muito-baixo": "Alerta: Pre√ßo muito abaixo do mercado pode ser considerado 'bait'",
      "falta-transparencia": "Alerta: Informa√ß√µes de pre√ßo incompletas",
      "termos-confusos": "Alerta: Termos de cancelamento ou renova√ß√£o confusos"
    },

    // Auditoria autom√°tica
    autoAudit: {
      frequency: "Semanal",
      scope: "Todos os an√∫ncios e landing pages",
      actions: ["Verificar pre√ßos", "Validar transpar√™ncia", "Testar clareza"]
    }
  },

  // üéØ IMPLEMENTA√á√ÉO PR√ÅTICA
  implementation: {
    // Textos de transpar√™ncia para usar
    transparencyTexts: {
      "header": "Transpar√™ncia Total de Pre√ßos",
      "subheader": "Sem surpresas, sem taxas ocultas, sem pegadinhas",
      "pricing": "Pre√ßos claros e justos desde o primeiro contato",
      "guarantee": "Garantia de transpar√™ncia ou devolu√ß√£o integral"
    },

    // Elementos visuais obrigat√≥rios
    visualElements: {
      "price-badge": "Badge 'Pre√ßo Final' em destaque",
      "transparency-seal": "Selo '100% Transparente'",
      "no-hidden-fees": "√çcone 'Sem Taxas Ocultas'",
      "money-back": "Garantia de devolu√ß√£o vis√≠vel"
    },

    // Estrutura de p√°gina obrigat√≥ria
    pageStructure: {
      "hero": "Pre√ßo principal em destaque",
      "details": "Detalhamento completo de custos",
      "guarantee": "Garantias e pol√≠ticas claras",
      "contact": "Formas de contato para esclarecimentos"
    }
  }
};

// Fun√ß√£o para validar compliance de transpar√™ncia
export function validateTransparencyCompliance(content: any) {
  const checklist = transparencyCompliance.complianceMonitoring.transparencyChecklist;
  const violations = [];
  
  // Verificar cada item do checklist
  for (const [item, description] of Object.entries(checklist)) {
    if (!content.includes(description)) {
      violations.push({
        item,
        description,
        severity: "high",
        action: "Adicionar informa√ß√£o obrigat√≥ria"
      });
    }
  }
  
  return {
    compliant: violations.length === 0,
    violations,
    score: ((Object.keys(checklist).length - violations.length) / Object.keys(checklist).length) * 100
  };
}

// Fun√ß√£o para gerar conte√∫do transparente
export function generateTransparentContent(serviceType: string) {
  const paymentModel = transparencyCompliance.pricingTransparency.paymentModels[serviceType as keyof typeof transparencyCompliance.pricingTransparency.paymentModels];
  const disclosures = transparencyCompliance.pricingTransparency.mandatoryDisclosures;
  
  if (!paymentModel) return null;
  
  return {
    pricing: {
      model: paymentModel.model,
      basePrice: paymentModel.basePrice,
      totalCost: paymentModel.totalCost,
      additionalFees: paymentModel.additionalFees,
      disclosure: paymentModel.disclosure
    },
    transparency: {
      header: transparencyCompliance.implementation.transparencyTexts.header,
      subheader: transparencyCompliance.implementation.transparencyTexts.subheader,
      guarantee: transparencyCompliance.implementation.transparencyTexts.guarantee
    },
    compliance: {
      checklist: transparencyCompliance.complianceMonitoring.transparencyChecklist,
      alerts: transparencyCompliance.complianceMonitoring.complianceAlerts
    }
  };
}
